{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\react-and-web3-demo-app\\\\src\\\\components\\\\Login\\\\Login.js\";\nimport { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  // const [isConnecting, setIsConnecting] = useState(false);\n  // const [provider, setProvider] = useState(window.ethereum);\n  // const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n\n  // useEffect(() => {\n  //   setProvider(detectProvider());\n  // }, []);\n\n  // useEffect(() => {\n  //   if (provider) {\n  //     if (provider !== window.ethereum) {\n  //       console.error(\n  //         \"Not window.ethereum provider.  Do you have multiple wallets installed ?\"\n  //       );\n  //     }\n  //     setIsMetaMaskInstalled(true);\n  //   }\n  // }, [provider]);\n\n  const detectProvider = () => {\n    //provider 는 감지 \n    let provider;\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      console.alert(\"No Ethereum browser detected! Check out MetaMask\");\n    }\n    return provider;\n  };\n  const onLoginHandler = async () => {\n    // setIsConnecting(true);\n    // await provider.request({\n    //   method: \"eth_requestAccounts\",\n    // });\n    // setIsConnecting(false);\n    const provider = detectProvider();\n    if (provider !== window.ethereum) {\n      console.error(\"Not window.ethereum provider. Do you have multiple wallet installed ? \");\n    }\n    props.onLogin(provider);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: [isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoginHandler,\n      className: classes.button,\n      type: \"button\",\n      children: [!isConnecting && \"Connect\", isConnecting && \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), !isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Install MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Card","classes","Login","props","detectProvider","provider","window","ethereum","web3","currentProvider","console","alert","onLoginHandler","error","onLogin","login","isMetaMaskInstalled","button","isConnecting"],"sources":["C:/project/react-and-web3-demo-app/src/components/Login/Login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  // const [isConnecting, setIsConnecting] = useState(false);\r\n  // const [provider, setProvider] = useState(window.ethereum);\r\n  // const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\r\n\r\n  // useEffect(() => {\r\n  //   setProvider(detectProvider());\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (provider) {\r\n  //     if (provider !== window.ethereum) {\r\n  //       console.error(\r\n  //         \"Not window.ethereum provider.  Do you have multiple wallets installed ?\"\r\n  //       );\r\n  //     }\r\n  //     setIsMetaMaskInstalled(true);\r\n  //   }\r\n  // }, [provider]);\r\n\r\n  const detectProvider = () => {\r\n    //provider 는 감지 \r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.alert(\"No Ethereum browser detected! Check out MetaMask\");\r\n    }\r\n    return provider;\r\n  };\r\n\r\n  const onLoginHandler = async () => {\r\n    // setIsConnecting(true);\r\n    // await provider.request({\r\n    //   method: \"eth_requestAccounts\",\r\n    // });\r\n    // setIsConnecting(false);\r\n    const provider = detectProvider();\r\n    if (provider !== window.ethereum) {\r\n      console.error(\"Not window.ethereum provider. Do you have multiple wallet installed ? \")\r\n    }\r\n    props.onLogin(provider);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      {isMetaMaskInstalled && (\r\n        <button\r\n          onClick={onLoginHandler}\r\n          className={classes.button}\r\n          type=\"button\"\r\n        >\r\n          {!isConnecting && \"Connect\"}\r\n          {isConnecting && \"Loading...\"}\r\n        </button>\r\n      )}\r\n      {!isMetaMaskInstalled && (\r\n        <p>\r\n          <a href=\"/\">Install MetaMask</a>\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMC,cAAc,GAAG,MAAM;IAC3B;IACA,IAAIC,QAAQ;IACZ,IAAIC,MAAM,CAACC,QAAQ,EAAE;MACnBF,QAAQ,GAAGC,MAAM,CAACC,QAAQ;IAC5B,CAAC,MAAM,IAAID,MAAM,CAACE,IAAI,EAAE;MACtBH,QAAQ,GAAGC,MAAM,CAACE,IAAI,CAACC,eAAe;IACxC,CAAC,MAAM;MACLC,OAAO,CAACC,KAAK,CAAC,kDAAkD,CAAC;IACnE;IACA,OAAON,QAAQ;EACjB,CAAC;EAED,MAAMO,cAAc,GAAG,YAAY;IACjC;IACA;IACA;IACA;IACA;IACA,MAAMP,QAAQ,GAAGD,cAAc,EAAE;IACjC,IAAIC,QAAQ,KAAKC,MAAM,CAACC,QAAQ,EAAE;MAChCG,OAAO,CAACG,KAAK,CAAC,wEAAwE,CAAC;IACzF;IACAV,KAAK,CAACW,OAAO,CAACT,QAAQ,CAAC;EACzB,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEJ,OAAO,CAACc,KAAM;IAAA,WAC5BC,mBAAmB,iBAClB;MACE,OAAO,EAAEJ,cAAe;MACxB,SAAS,EAAEX,OAAO,CAACgB,MAAO;MAC1B,IAAI,EAAC,QAAQ;MAAA,WAEZ,CAACC,YAAY,IAAI,SAAS,EAC1BA,YAAY,IAAI,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC,EACA,CAACF,mBAAmB,iBACnB;MAAA,uBACE;QAAG,IAAI,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QAEnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEX,CAAC;AAAC,KAjEId,KAAK;AAmEX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}