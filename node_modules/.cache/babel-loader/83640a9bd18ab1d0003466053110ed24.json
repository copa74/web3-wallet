{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\react-and-web3-demo-app\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = props => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [provider, setProvider] = useState(window.ethereum);\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\n  useEffect(() => {\n    setProvider(detectProvider());\n  }, []);\n  useEffect(() => {\n    if (provider) {\n      if (provider !== window.ethereum) {\n        console.error(\"Not window.ethereum provider.  Do you have multiple wallets installed ?\");\n      }\n      setIsMetaMaskInstalled(true);\n    }\n  }, [provider]);\n  const detectProvider = () => {\n    let provider;\n    if (window.ethereum) {\n      provider = window.ethereum;\n    } else if (window.web3) {\n      provider = window.web3.currentProvider;\n    } else {\n      console.warn(\"No Ethereum browser detected! Check out MetaMask\");\n    }\n    return provider;\n  };\n  const onLoginHandler = async () => {\n    setIsConnecting(true);\n    await provider.request({\n      method: \"eth_requestAccounts\"\n    });\n    setIsConnecting(false);\n    props.onLogin(provider);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: [isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onLoginHandler,\n      className: classes.button,\n      type: \"button\",\n      children: [!isConnecting && \"Connect\", isConnecting && \"Loading...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), !isMetaMaskInstalled && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: \"Install MetaMask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"BzycAuBOOOH9FyXqTmSLfsn1QvQ=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","Card","classes","Login","props","isConnecting","setIsConnecting","provider","setProvider","window","ethereum","isMetaMaskInstalled","setIsMetaMaskInstalled","detectProvider","console","error","web3","currentProvider","warn","onLoginHandler","request","method","onLogin","login","button"],"sources":["C:/project/react-and-web3-demo-app/src/components/Login/Login.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Card from \"../UI/Card/Card\";\r\nimport classes from \"./Login.module.css\";\r\n\r\nconst Login = (props) => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [provider, setProvider] = useState(window.ethereum);\r\n  const [isMetaMaskInstalled, setIsMetaMaskInstalled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setProvider(detectProvider());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (provider) {\r\n      if (provider !== window.ethereum) {\r\n        console.error(\r\n          \"Not window.ethereum provider.  Do you have multiple wallets installed ?\"\r\n        );\r\n      }\r\n      setIsMetaMaskInstalled(true);\r\n    }\r\n  }, [provider]);\r\n\r\n  const detectProvider = () => {\r\n    let provider;\r\n    if (window.ethereum) {\r\n      provider = window.ethereum;\r\n    } else if (window.web3) {\r\n      provider = window.web3.currentProvider;\r\n    } else {\r\n      console.warn(\"No Ethereum browser detected! Check out MetaMask\");\r\n    }\r\n    return provider;\r\n  };\r\n\r\n  const onLoginHandler = async () => {\r\n    setIsConnecting(true);\r\n    await provider.request({\r\n      method: \"eth_requestAccounts\",\r\n    });\r\n    setIsConnecting(false);\r\n    props.onLogin(provider);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.login}>\r\n      {isMetaMaskInstalled && (\r\n        <button\r\n          onClick={onLoginHandler}\r\n          className={classes.button}\r\n          type=\"button\"\r\n        >\r\n          {!isConnecting && \"Connect\"}\r\n          {isConnecting && \"Loading...\"}\r\n        </button>\r\n      )}\r\n      {!isMetaMaskInstalled && (\r\n        <p>\r\n          <a href=\"/\">Install MetaMask</a>\r\n        </p>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,iBAAiB;AAClC,OAAOC,OAAO,MAAM,oBAAoB;AAAC;AAEzC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAACU,MAAM,CAACC,QAAQ,CAAC;EACzD,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAErEC,SAAS,CAAC,MAAM;IACdQ,WAAW,CAACK,cAAc,EAAE,CAAC;EAC/B,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,EAAE;MACZ,IAAIA,QAAQ,KAAKE,MAAM,CAACC,QAAQ,EAAE;QAChCI,OAAO,CAACC,KAAK,CACX,yEAAyE,CAC1E;MACH;MACAH,sBAAsB,CAAC,IAAI,CAAC;IAC9B;EACF,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMM,cAAc,GAAG,MAAM;IAC3B,IAAIN,QAAQ;IACZ,IAAIE,MAAM,CAACC,QAAQ,EAAE;MACnBH,QAAQ,GAAGE,MAAM,CAACC,QAAQ;IAC5B,CAAC,MAAM,IAAID,MAAM,CAACO,IAAI,EAAE;MACtBT,QAAQ,GAAGE,MAAM,CAACO,IAAI,CAACC,eAAe;IACxC,CAAC,MAAM;MACLH,OAAO,CAACI,IAAI,CAAC,kDAAkD,CAAC;IAClE;IACA,OAAOX,QAAQ;EACjB,CAAC;EAED,MAAMY,cAAc,GAAG,YAAY;IACjCb,eAAe,CAAC,IAAI,CAAC;IACrB,MAAMC,QAAQ,CAACa,OAAO,CAAC;MACrBC,MAAM,EAAE;IACV,CAAC,CAAC;IACFf,eAAe,CAAC,KAAK,CAAC;IACtBF,KAAK,CAACkB,OAAO,CAACf,QAAQ,CAAC;EACzB,CAAC;EAED,oBACE,QAAC,IAAI;IAAC,SAAS,EAAEL,OAAO,CAACqB,KAAM;IAAA,WAC5BZ,mBAAmB,iBAClB;MACE,OAAO,EAAEQ,cAAe;MACxB,SAAS,EAAEjB,OAAO,CAACsB,MAAO;MAC1B,IAAI,EAAC,QAAQ;MAAA,WAEZ,CAACnB,YAAY,IAAI,SAAS,EAC1BA,YAAY,IAAI,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhC,EACA,CAACM,mBAAmB,iBACnB;MAAA,uBACE;QAAG,IAAI,EAAC,GAAG;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAqB;MAAA;MAAA;MAAA;IAAA,QAEnC;EAAA;IAAA;IAAA;IAAA;EAAA,QACI;AAEX,CAAC;AAAC,GA5DIR,KAAK;AAAA,KAALA,KAAK;AA8DX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}