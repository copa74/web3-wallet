{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\react-and-web3-demo-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Home from \"./components/Home/Home\";\nimport Login from \"./components/Login/Login\";\nimport Web3 from \"web3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(false);\n  const [currentAccount, setCurrentAccount] = useState(null);\n  const [provider, setProvider] = useState(window.ethereum);\n  // const [chainId, setChainId] = useState(null);\n  const [web3, setWeb3] = useState(null);\n\n  // const NETWORKS = {\n  //   1: \"Ethereum Main Network\",\n  //   3: \"Ropsten Test Network\",\n  //   4: \"Rinkeby Test Network\",\n  //   5: \"Goerli Test Network\",\n  //   42: \"Kovan Test Network\",\n  // };\n\n  const onLogin = async provider => {\n    const web3 = new Web3(provider);\n    const accounts = await web3.eth.getAccounts();\n    if (accounts.length === 0) {\n      onLogout();\n      console.log(\"Please connect to MetaMask!\");\n    } else if (accounts[0] !== currentAccount) {\n      setCurrentAccount(accounts[0]);\n      setIsConnected(true);\n    }\n    //   const chainId = await web3.eth.getChainId();\n    //   if (accounts.length === 0) {\n    //     console.log(\"Please connect to MetaMask!\");\n    //   } else if (accounts[0] !== currentAccount) {\n    //     setProvider(provider);\n    //     setWeb3(web3);\n    //     setChainId(chainId);\n    //     setCurrentAccount(accounts[0]);\n    //     setIsConnected(true);\n    //   }\n  };\n  //11:11\n\n  useEffect(() => {\n    const handleAccountsChanged = async accounts => {\n      const web3Accounts = await web3.eth.getAccounts(); //지갑\n      if (accounts.length === 0) {\n        // 지갑이 없으면 ? \n        console.log(\"Please connect to MetaMask!\");\n      } else if (accounts[0] !== currentAccount) {\n        setCurrentAccount(accounts[0]); // 지갑 연결\n        setIsConnected(true); // 지갑연결 확인 \n      }\n    };\n\n    if (isConnected) {\n      provider.on(\"accountsChanged\", handleAccountsChanged); // 계정 전환 감지\n      // provider.on(\"chainChanged\", handleChainChanged); // 네트워크 전환 감지\n    }\n\n    //   if (isConnected) {\n    //     provider.on(\"accountsChanged\", handleAccountsChanged);\n    //     provider.on(\"chainChanged\", handleChainChanged);\n    //   }\n\n    //   const handleAccountsChanged = async (accounts) => {\n    //     const web3Accounts = await web3.eth.getAccounts();\n    //     if (accounts.length === 0) {\n    //       onLogout();\n    //     } else if (accounts[0] !== currentAccount) {\n    //       setCurrentAccount(accounts[0]);\n    //     }\n    //   };\n\n    //   const handleChainChanged = async (chainId) => {\n    //     const web3ChainId = await web3.eth.getChainId();\n    //     setChainId(web3ChainId);\n    //   };\n\n    return () => {\n      if (isConnected) {\n        provider.removeListener(\"accountsChanged\", handleAccountsChanged);\n        // provider.removeListener(\"chainChanged\", handleChainChanged);\n      }\n    };\n  }, [isConnected]);\n\n  // const onLogout = () => {\n  //   setIsConnected(false);\n  //   setCurrentAccount(null);\n  // };\n\n  // const getCurrentNetwork = (chainId) => {\n  //   return NETWORKS[chainId];\n  // };\n\n  // const onLogin = () => {\n  //   setIsConnected(true);\n  // }\n\n  const onLogout = () => {\n    setIsConnected(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"main-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React & Web3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"nav\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/\",\n              children: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [!isConnected && /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: onLogin,\n        onLogout: onLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 26\n      }, this), isConnected && /*#__PURE__*/_jsxDEV(Home, {\n        currentAccount: currentAccount\n        // currentNetwork={getCurrentNetwork(chainId)}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1zgIjzX4MZz3aRDaYpSCPUNBb7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Home","Login","Web3","App","isConnected","setIsConnected","currentAccount","setCurrentAccount","provider","setProvider","window","ethereum","web3","setWeb3","onLogin","accounts","eth","getAccounts","length","onLogout","console","log","handleAccountsChanged","web3Accounts","on","removeListener"],"sources":["C:/project/react-and-web3-demo-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Login from \"./components/Login/Login\";\r\nimport Web3 from \"web3\";\r\n\r\nfunction App() {\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentAccount, setCurrentAccount] = useState(null);\r\n  const [provider, setProvider] = useState(window.ethereum);\r\n  // const [chainId, setChainId] = useState(null);\r\n  const [web3, setWeb3] = useState(null);\r\n\r\n  // const NETWORKS = {\r\n  //   1: \"Ethereum Main Network\",\r\n  //   3: \"Ropsten Test Network\",\r\n  //   4: \"Rinkeby Test Network\",\r\n  //   5: \"Goerli Test Network\",\r\n  //   42: \"Kovan Test Network\",\r\n  // };\r\n\r\n  const onLogin = async (provider) => {\r\n    const web3 = new Web3(provider);\r\n    const accounts = await web3.eth.getAccounts();\r\n    if (accounts.length === 0) {\r\n      onLogout();\r\n      console.log(\"Please connect to MetaMask!\");\r\n    } else if (accounts[0] !== currentAccount) {\r\n      setCurrentAccount(accounts[0]);\r\n      setIsConnected(true);\r\n    }\r\n  //   const chainId = await web3.eth.getChainId();\r\n  //   if (accounts.length === 0) {\r\n  //     console.log(\"Please connect to MetaMask!\");\r\n  //   } else if (accounts[0] !== currentAccount) {\r\n  //     setProvider(provider);\r\n  //     setWeb3(web3);\r\n  //     setChainId(chainId);\r\n  //     setCurrentAccount(accounts[0]);\r\n  //     setIsConnected(true);\r\n  //   }\r\n  };\r\n  //11:11\r\n\r\n  useEffect(() => {\r\n      const handleAccountsChanged = async (accounts) => {\r\n        const web3Accounts = await web3.eth.getAccounts(); //지갑\r\n        if (accounts.length === 0) { // 지갑이 없으면 ? \r\n          console.log(\"Please connect to MetaMask!\");\r\n        } else if (accounts[0] !== currentAccount) {\r\n          setCurrentAccount(accounts[0]); // 지갑 연결\r\n          setIsConnected(true); // 지갑연결 확인 \r\n        }\r\n      }\r\n\r\n      if (isConnected) {\r\n      provider.on(\"accountsChanged\", handleAccountsChanged);  // 계정 전환 감지\r\n      // provider.on(\"chainChanged\", handleChainChanged); // 네트워크 전환 감지\r\n    }\r\n\r\n      //   if (isConnected) {\r\n  //     provider.on(\"accountsChanged\", handleAccountsChanged);\r\n  //     provider.on(\"chainChanged\", handleChainChanged);\r\n  //   }\r\n\r\n \r\n  //   const handleAccountsChanged = async (accounts) => {\r\n  //     const web3Accounts = await web3.eth.getAccounts();\r\n  //     if (accounts.length === 0) {\r\n  //       onLogout();\r\n  //     } else if (accounts[0] !== currentAccount) {\r\n  //       setCurrentAccount(accounts[0]);\r\n  //     }\r\n  //   };\r\n\r\n  //   const handleChainChanged = async (chainId) => {\r\n  //     const web3ChainId = await web3.eth.getChainId();\r\n  //     setChainId(web3ChainId);\r\n  //   };\r\n\r\n\r\n\r\n    return () => {\r\n      if (isConnected) {\r\n        provider.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n        // provider.removeListener(\"chainChanged\", handleChainChanged);\r\n      }\r\n    };\r\n  }, [isConnected]);\r\n\r\n\r\n\r\n  // const onLogout = () => {\r\n  //   setIsConnected(false);\r\n  //   setCurrentAccount(null);\r\n  // };\r\n\r\n  // const getCurrentNetwork = (chainId) => {\r\n  //   return NETWORKS[chainId];\r\n  // };\r\n\r\n  // const onLogin = () => {\r\n  //   setIsConnected(true);\r\n  // }\r\n\r\n  const onLogout = () => {\r\n    setIsConnected(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"main-header\">\r\n        <h1>React &amp; Web3</h1>\r\n        <nav className=\"nav\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"/\">{currentAccount}</a>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <main>\r\n        {!isConnected && <Login onLogin={onLogin} onLogout={onLogout} />}\r\n        {isConnected && (\r\n          <Home\r\n            currentAccount={currentAccount}\r\n            // currentNetwork={getCurrentNetwork(chainId)}\r\n          />\r\n        )} \r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}